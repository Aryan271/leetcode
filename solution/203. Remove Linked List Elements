/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
     ListNode * temp=head;
        if(head==NULL){
            return head;
        }
        if(head->next==NULL&&head->val==val){
            head=NULL;
            return head;
        }
       
    temp=head;
        while(temp->next!=NULL){
            if(temp->next->val==val){
            ListNode *temp1 = temp->next;
            while(temp1->val==val&&temp1->next!=NULL){
                temp1=temp1->next;
            }
            
                if(temp1->val==val&&temp1->next==NULL){
                    temp->next=temp1->next;
                    break;
                }
          temp->next=temp1;
        }
            temp=temp->next;
        }
         if(head->val==val){
            head=head->next;
        }
        return head;
    }
};
